name: Godot Protobuf GDScript Plugin Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        type: string
  workflow_call:
    inputs:
      version:
        required: true
        type: string

permissions:
  contents: write  # 允许创建和修改发布
  actions: read    # 允许读取工作流

env:
  PLUGIN_NAME: protobuf-gdscript

jobs:
  package-plugin:
    name: Package Godot Protobuf GDScript Plugin
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Create Plugin Package
      run: |
        VERSION="${{ inputs.version }}"
        PACKAGE_NAME="godot-${{ env.PLUGIN_NAME }}-plugin-${VERSION}"
        mkdir -p ${PACKAGE_NAME}
        cp -r addons ${PACKAGE_NAME}/
        touch ${PACKAGE_NAME}/addons/protobuf/example/.gdignore
        # Remove .uid files before packaging
        find ${PACKAGE_NAME} -name "*.uid" -type f -delete
        zip -r ${PACKAGE_NAME}.zip ${PACKAGE_NAME}

    - name: Upload Artifact 
      uses: actions/upload-artifact@v4
      with:
        name: godot-${{ env.PLUGIN_NAME }}-plugin-${{ inputs.version }}
        path: godot-${{ env.PLUGIN_NAME }}-plugin-*.zip
        retention-days: 14

    - name: Install GitHub CLI
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: godot-${{ env.PLUGIN_NAME }}-plugin-*.zip
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#    - name: Create Release
#      if: startsWith(github.ref, 'refs/tags/')
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      run: |
#        # 尝试创建发布，如果已存在则上传资源
#        if ! gh release create ${{ inputs.version }} \
#          --title "Release ${{ inputs.version }}" \
#          --notes "Release ${{ inputs.version }}" \
#          godot-${{ env.PLUGIN_NAME }}-plugin-${{ inputs.version }}.zip; then
#          echo "Release already exists, uploading assets..."
#          gh release upload ${{ inputs.version }} \
#            godot-${{ env.PLUGIN_NAME }}-plugin-${{ inputs.version }}.zip --clobber
#        fi
